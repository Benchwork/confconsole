Free SSL certificates from Let's Encrypt
========================================

For full documentation, please see:

  https://www.turnkeylinux.org/docs/letsencrypt

For advanced usage, please see:

  docs/Lets_encrypt#advanced.rst

About
-----

ConfConsole Let's Encrypt plugin provides a simple way to get free
legitimate SSL certs via Let's Encrypt. It uses a custom mini 
webserver to host the challenges required by Let's Encrypt (to prove
your ownership). That means that the same tool will work with any  
webserver included with any TurnKey appliance, regardless of 
webserver configuration.

Currently support webservers are:

  - Apache
  - LigHTTPd
  - Nginx
  - Tomcat7/Tomcat8

What it does
------------

GET CERTIFICATE

The process goes like this:

- Confconsole Let's Encrypt plugin writes the domain (and subdomains)
  to /etc/dehydrated/confconsole.domains.txt
- Confconsole calls dehydrated-wrapper
- dehydrated-wrapper stops webserver listening on port 80
- dehydrated-wrapper checks for /etc/dehydrated/confconsole.config 
  (config file); if it doesn't exist, it copies it the default file 
  from: /usr/share/confconsole/letsencrypt/dehydrated-confconsole.config
- dehydrated-wrapper checks for /etc/dehydrated/confconsole.hook.sh 
  (hook script); if it doesn't exist, it copies it the default file 
  from: /usr/share/confconsole/letsencrypt/dehydrated-confconsole.hook.sh
- dehydrated-wrapper checks for /etc/cron.daily/confconsole-dehydrated 
  (cron script); if it doesn't exist, it copies it the default file from: 
  /usr/share/confconsole/letsencrypt/dehydrated-confconsole.cron
- dehydrated-wrapper calls dehydrated, passing confconsole.config, 
  confconsole.hook.sh & confconsole.domains.txt (all stored within 
  /etc/dehydrated/)
- dehydrated contacts Let's Encrypt and gets the challenge (to prove you 
  control the domain)
- Whilst hosting the challenge, add-water temporarily redirects (i.e.
  304) all web traffic except for the challenge are redirected (304 -
  temporarily moved) to the web root. A simple "Under Maintence" 
  message is displayed.
- via the hook script, dehydrated serves Let's Encrypt challenges 
  using add-water server (minimalist python webserver)
- when done, add-water is killed (via hook script)
- dehydrated writes certificate to /etc/ssl/private/cert.pem (via 
  hook script); original certs generated by dehydrated remain in 
  /var/lib/dehydrated/certs/DOMAIN
- dehydrated hands back to dehydrated-wrapper
- dehydrated-wrapper restarts webserver
- dehydrated-wrapper restarts stunnel (so Webmin & Webshell also use new cert)
- dehydrated-wrapper hands back to confconsole

CERT AUTO RENEW

Confconsole simply makes the default cron job (/etc/cron.daily/confconsole
-dehydrated) executable (or not). Only executable files within 
/etc/cron.daily are triggered by cron.

Note: the cron job doesn't exist in the cron.daily directory until 
dehydrated-wrapper is run for the first time (as hinted above). This 
ensures that the cron job can't be enabled until the dehydrated
-wrapper has been run (and hopefully a Let's Encrypt SSL cert has 
been generated).

CRON JOB

The cron job checks the expiry date of the default certificate 
(/etc/ssl/private/cert.pem) and if it will expire within 30 days or 
less, it runs dehydrated-wrapper (using the --force switch).

